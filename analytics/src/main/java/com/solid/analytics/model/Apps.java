/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.solid.analytics.model;

import java.util.Hashtable;
import java.util.Iterator;
import java.util.Vector;
import java.util.Enumeration;

import org.json.*;

import com.solid.analytics.thrift.*;
import com.solid.analytics.thrift.meta_data.*;
import com.solid.analytics.thrift.transport.*;
import com.solid.analytics.thrift.protocol.*;

public class Apps implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("");

  private static final TField APPS_FIELD_DESC = new TField("4962A66F2C04C2BF1884EB6896B79164", TType.MAP, (short)1);
  private static final TField USAGES_FIELD_DESC = new TField("832AFC71C3BF7019DC2CEB44B6ED42DC", TType.STRUCT, (short)2);

  private Hashtable apps;
  private AppUsages usages;

  // isset id assignments

  public Apps() {
  }

  public Apps(
    Hashtable apps,
    AppUsages usages)
  {
    this();
    this.apps = apps;
    this.usages = usages;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Apps(Apps other) {
    if (other.isSetApps()) {
      Hashtable __this__apps = new Hashtable();
      for (Enumeration other_enum = other.apps.keys(); other_enum.hasMoreElements(); ) {

        String other_element_key = (String)other_enum.nextElement();
        App other_element_value = (App)other.apps.get(other_element_key);

        String __this__apps_copy_key = other_element_key;

        App __this__apps_copy_value = new App(other_element_value);

        __this__apps.put(__this__apps_copy_key, __this__apps_copy_value);
      }
      this.apps = __this__apps;
    }
    if (other.isSetUsages()) {
      this.usages = new AppUsages(other.usages);
    }
  }

  public Apps deepCopy() {
    return new Apps(this);
  }

  public void clear() {
    this.apps = null;
    this.usages = null;
  }

  public int getAppsSize() {
    return (this.apps == null) ? 0 : this.apps.size();
  }

  public void putToApps(String key, App val) {
    if (this.apps == null) {
      this.apps = new Hashtable();
    }
    this.apps.put(key, val);
  }

  public Hashtable getApps() {
    return this.apps;
  }

  public void setApps(Hashtable apps) {
    this.apps = apps;
  }

  public void unsetApps() {
    this.apps = null;
  }

  /** Returns true if field apps is set (has been assigned a value) and false otherwise */
  public boolean isSetApps() {
    return this.apps != null;
  }

  public void setAppsIsSet(boolean value) {
    if (!value) {
      this.apps = null;
    }
  }

  public AppUsages getUsages() {
    return this.usages;
  }

  public void setUsages(AppUsages usages) {
    this.usages = usages;
  }

  public void unsetUsages() {
    this.usages = null;
  }

  /** Returns true if field usages is set (has been assigned a value) and false otherwise */
  public boolean isSetUsages() {
    return this.usages != null;
  }

  public void setUsagesIsSet(boolean value) {
    if (!value) {
      this.usages = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Apps)
      return this.equals((Apps)that);
    return false;
  }

  public boolean equals(Apps that) {
    if (that == null)
      return false;

    boolean this_present_apps = true && this.isSetApps();
    boolean that_present_apps = true && that.isSetApps();
    if (this_present_apps || that_present_apps) {
      if (!(this_present_apps && that_present_apps))
        return false;
      if (!this.apps.equals(that.apps))
        return false;
    }

    boolean this_present_usages = true && this.isSetUsages();
    boolean that_present_usages = true && that.isSetUsages();
    if (this_present_usages || that_present_usages) {
      if (!(this_present_usages && that_present_usages))
        return false;
      if (!this.usages.equals(that.usages))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    Apps other = (Apps)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetApps(), other.isSetApps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApps()) {
      lastComparison = TBaseHelper.compareTo(this.apps, other.apps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetUsages(), other.isSetUsages());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsages()) {
      lastComparison = this.usages.compareTo(other.usages);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // APPS
          if (field.type == TType.MAP) {
            {
              TMap _map48 = iprot.readMapBegin();
              this.apps = new Hashtable(2*_map48.size);
              for (int _i49 = 0; _i49 < _map48.size; ++_i49)
              {
                String _key50;
                App _val51;
                _key50 = iprot.readString();
                _val51 = new App();
                _val51.read(iprot);
                this.apps.put(_key50, _val51);
              }
              iprot.readMapEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // USAGES
          if (field.type == TType.STRUCT) {
            this.usages = new AppUsages();
            this.usages.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.apps != null) {
      oprot.writeFieldBegin(APPS_FIELD_DESC);
      {
        oprot.writeMapBegin(new TMap(TType.STRING, TType.STRUCT, this.apps.size()));
        for (Enumeration _iter52_enum = this.apps.keys(); _iter52_enum.hasMoreElements(); )         {
          String _iter52 = (String)_iter52_enum.nextElement();
          oprot.writeString(_iter52);
          ((App)this.apps.get(_iter52)).write(oprot);
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.usages != null) {
      oprot.writeFieldBegin(USAGES_FIELD_DESC);
      this.usages.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public void validate() throws TException {
    // check for required fields
  }

  public void read(JSONObject obj) throws TException {
    validate();

    try {
      if (obj.has(APPS_FIELD_DESC.name())) {
        {
          JSONObject _map53 = obj.optJSONObject(APPS_FIELD_DESC.name());
          this.apps = new Hashtable(2*_map53.length());
          Iterator<String> _iter54 = _map53.keys();
          while (_iter54.hasNext())
          {
            String _key56 = _iter54.next();
            String _key58;
            App _val59;
            _key58 = _key56;
            _val59 = new App();
            _val59.read(_map53.optJSONObject(_key56));
            this.apps.put(_key58, _val59);
          }
        }
      }
      if (obj.has(USAGES_FIELD_DESC.name())) {
        this.usages = new AppUsages();
        this.usages.read(obj.optJSONObject(USAGES_FIELD_DESC.name()));
      }
    } catch (Exception e) {
        throw new TException(e);
    }
  }

  public void write(JSONObject obj) throws TException {
    validate();

    try {
      if (this.apps != null) {
        JSONObject v_apps = new JSONObject();
        for (Enumeration _iter60_enum = this.apps.keys(); _iter60_enum.hasMoreElements(); )         {
          String _iter60 = (String)_iter60_enum.nextElement();
          App _iter60_value = ((App)this.apps.get(_iter60));
          JSONObject _iter60_value_json = new JSONObject();
          _iter60_value.write(_iter60_value_json);
          v_apps.put(_iter60, _iter60_value_json);
        }
        obj.put(APPS_FIELD_DESC.name(), v_apps);
      }
      if (this.usages != null) {
        JSONObject v_usages = new JSONObject();
        this.usages.write(v_usages);
        obj.put(USAGES_FIELD_DESC.name(), v_usages);
      }
    } catch (Exception e) {
        throw new TException(e);
    }
  }

}

