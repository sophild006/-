/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.solid.analytics.model;

import java.util.Hashtable;
import java.util.Iterator;
import java.util.Vector;
import java.util.Enumeration;

import org.json.*;

import com.solid.analytics.thrift.*;
import com.solid.analytics.thrift.meta_data.*;
import com.solid.analytics.thrift.transport.*;
import com.solid.analytics.thrift.protocol.*;

public class Config implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("");

  private static final TField ANALYTICS_URL_FIELD_DESC = new TField("8811639629A1496F600DBD44AE4EB070", TType.STRING, (short)1);
  private static final TField CHANNEL_FIELD_DESC = new TField("9108CB96FFFEC47E941208B972F036BD", TType.STRING, (short)20);
  private static final TField UPLOAD_APPS_INFO_FIELD_DESC = new TField("7F2FE53A9CBA5596B784640386068E61", TType.BOOL, (short)30);
  private static final TField ACTIVATE_PATH_FIELD_DESC = new TField("682604AAD3910B2A168B5F6131291498", TType.STRING, (short)40);
  private static final TField ACTIVATE_PATH_FIELD_VALUE = new TField("8F7CED4F489D019C73B863FE59B3699A", TType.STRING, (short)40);
  private static final TField HEARTBEAT_PATH_FIELD_DESC = new TField("241E7CF89BC576D261FD9FDFF6A6AE05", TType.STRING, (short)41);
  private static final TField HEARTBEAT_PATH_FIELD_VALUE = new TField("FB822FE0125013E90E8C1AD2630FA04A", TType.STRING, (short)41);
  private static final TField EVENT_PATH_FIELD_DESC = new TField("5D4DC87BC4CA2560AA94184EF1B687A2", TType.STRING, (short)42);
  private static final TField EVENT_PATH_FIELD_VALUE = new TField("AC38C4EC0FD5AB7DB52028751449E2D1", TType.STRING, (short)42);
  private static final TField EVENTS_PATH_FIELD_DESC = new TField("6CD94C006580C03A375301595E576DB9", TType.STRING, (short)43);
  private static final TField EVENTS_PATH_FIELD_VALUE = new TField("E1797705AABC10E54E8F7952DFF3BF1F", TType.STRING, (short)43);
  private static final TField PROPERTIES_PATH_FIELD_DESC = new TField("65795A75465047D157D516BC6A16D477", TType.STRING, (short)44);
  private static final TField PROPERTIES_PATH_FIELD_VALUE = new TField("C2030DD12617D6006FB2A747F6563DF2", TType.STRING, (short)44);
  private static final TField PAGE_EVENT_PATH_FIELD_DESC = new TField("AB01C02C1AC623CB453A16C5CB541132", TType.STRING, (short)45);
  private static final TField PAGE_EVENT_PATH_FIELD_VALUE = new TField("B0175CB91EF8DBC39691984C7712BA2C", TType.STRING, (short)45);
  private static final TField APPS_INFO_PATH_FIELD_DESC = new TField("505DD549C0DE7878F4BC9A64C8BF11A3", TType.STRING, (short)46);
  private static final TField APPS_INFO_PATH_FIELD_VALUE = new TField("FF85AF10F1D16494F852A3559B4EE4D6", TType.STRING, (short)46);
  private static final TField ACTIVATE_KEY_FIELD_DESC = new TField("174C6C35F71D3050E485D842C94DEF02", TType.STRING, (short)60);
  private static final TField ACTIVATE_KEY_FIELD_VALUE = new TField("0E2168C273CC595A971E7B1A4A0B828BF7755D46680869C88DAD6D63C548E3C3F9290E859E71CCCD90B9F1E349167A62", TType.STRING, (short)60);
  private static final TField HEARTBEAT_KEY_FIELD_DESC = new TField("15EB31CED2D9A8EFA2B2C924798273E3", TType.STRING, (short)61);
  private static final TField HEARTBEAT_KEY_FIELD_VALUE = new TField("7107C92FBE968F19A0AC63D010C5D329C908FFA4C39A7004675DD73EA9751C00799A41670297157EF13310C927629EEF", TType.STRING, (short)61);
  private static final TField EVENT_KEY_FIELD_DESC = new TField("575D5ACE7445448D9F6660778A931579", TType.STRING, (short)62);
  private static final TField EVENT_KEY_FIELD_VALUE = new TField("F064A153AFBA6F8B0510C191E9A70D7779E6AB617CB347DA0890AC722F056DEC3384CD0434E78974EE509DEA8ED5D37F", TType.STRING, (short)62);
  private static final TField EVENTS_KEY_FIELD_DESC = new TField("3AB718DBEA37BA18BB890FAC53D03EA9", TType.STRING, (short)63);
  private static final TField EVENTS_KEY_FIELD_VALUE = new TField("F064A153AFBA6F8B0510C191E9A70D7779E6AB617CB347DA0890AC722F056DEC3384CD0434E78974EE509DEA8ED5D37F", TType.STRING, (short)63);
  private static final TField PROPERTIES_KEY_FIELD_DESC = new TField("23C04152069A4AC46451048C33490A6F", TType.STRING, (short)64);
  private static final TField PROPERTIES_KEY_FIELD_VALUE = new TField("E2D4CE27F4DE01B7393A65EB5AF4F5E288B3DA61DA012C77A86AD1A2C095318C8F49F28B8B6B34A2FA3E15240A5DF7BD", TType.STRING, (short)64);
  private static final TField PAGE_EVENT_KEY_FIELD_DESC = new TField("F90867787A428C27DBBCEFE4E8BE851F", TType.STRING, (short)65);
  private static final TField PAGE_EVENT_KEY_FIELD_VALUE = new TField("86F61C0DEB6CC6789FFC0A178EE5ACB04868D3943FACACA68C47BB1A3137FD1C75818C98E94826409C2FA7F7B7DEF7B5", TType.STRING, (short)65);
  private static final TField APPS_INFO_KEY_FIELD_DESC = new TField("E7344AFF328395B4B3FBCEA79AE49A95", TType.STRING, (short)66);
  private static final TField APPS_INFO_KEY_FIELD_VALUE = new TField("203A1E0EB77A446EC827A1786F9BA088F8157595A786734E5B0A6B9F148420A58F5C6E32F1127F5FB8B336D10113D659", TType.STRING, (short)66);
  private static final TField SU_PATHS_FIELD_DESC = new TField("79AFCA8C62EDE4A0EEADFA56DE1E9550", TType.STRING, (short)90);
  private static final TField SU_PATHS_FIELD_VALUE = new TField("8BC03616B371F1AE8F06D521C7BE7BA869A0ED60AA1191AC25A4DBDD93880AEC65FEC666D13113B513A98A2FF95258E0BE3D0FFB0FE3AE81327383703C8AADB9B9286F9F593F2AECCC064F064E70F6C9", TType.STRING, (short)90);
  private static final TField USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_DESC = new TField("7C2992A8C24C78A26C0476F19593E577CC9DACD3663C065EA809BB3B016C3DA2", TType.STRING, (short)91);
  private static final TField USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_VALUE = new TField("14AF73BE91375A3ACFD0D65902C844A8", TType.STRING, (short)91);

  private String analyticsUrl;
  private String channel;
  private boolean uploadAppsInfo;
  private String activatePath;
  private String heartbeatPath;
  private String eventPath;
  private String eventsPath;
  private String propertiesPath;
  private String pageEventPath;
  private String appsInfoPath;
  private String activateKey;
  private String heartbeatKey;
  private String eventKey;
  private String eventsKey;
  private String propertiesKey;
  private String pageEventKey;
  private String appsInfoKey;
  private String suPaths;
  private String usageStatsFieldLaunchCount;

  // isset id assignments
  private static final int __UPLOADAPPSINFO_ISSET_ID = 0;
  private boolean[] __isset_vector = new boolean[1];

  public Config() {
    this.activatePath = ACTIVATE_PATH_FIELD_VALUE.name();

    this.heartbeatPath = HEARTBEAT_PATH_FIELD_VALUE.name();

    this.eventPath = EVENT_PATH_FIELD_VALUE.name();

    this.eventsPath = EVENTS_PATH_FIELD_VALUE.name();

    this.propertiesPath = PROPERTIES_PATH_FIELD_VALUE.name();

    this.pageEventPath = PAGE_EVENT_PATH_FIELD_VALUE.name();

    this.appsInfoPath = APPS_INFO_PATH_FIELD_VALUE.name();

    this.activateKey = ACTIVATE_KEY_FIELD_VALUE.name();

    this.heartbeatKey = HEARTBEAT_KEY_FIELD_VALUE.name();

    this.eventKey = EVENT_KEY_FIELD_VALUE.name();

    this.eventsKey = EVENTS_KEY_FIELD_VALUE.name();

    this.propertiesKey = PROPERTIES_KEY_FIELD_VALUE.name();

    this.pageEventKey = PAGE_EVENT_KEY_FIELD_VALUE.name();

    this.appsInfoKey = APPS_INFO_KEY_FIELD_VALUE.name();

    this.suPaths = SU_PATHS_FIELD_VALUE.name();

    this.usageStatsFieldLaunchCount = USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_VALUE.name();

  }

  public Config(
    String analyticsUrl,
    String channel,
    boolean uploadAppsInfo,
    String activatePath,
    String heartbeatPath,
    String eventPath,
    String eventsPath,
    String propertiesPath,
    String pageEventPath,
    String appsInfoPath,
    String activateKey,
    String heartbeatKey,
    String eventKey,
    String eventsKey,
    String propertiesKey,
    String pageEventKey,
    String appsInfoKey,
    String suPaths,
    String usageStatsFieldLaunchCount)
  {
    this();
    this.analyticsUrl = analyticsUrl;
    this.channel = channel;
    this.uploadAppsInfo = uploadAppsInfo;
    setUploadAppsInfoIsSet(true);
    this.activatePath = activatePath;
    this.heartbeatPath = heartbeatPath;
    this.eventPath = eventPath;
    this.eventsPath = eventsPath;
    this.propertiesPath = propertiesPath;
    this.pageEventPath = pageEventPath;
    this.appsInfoPath = appsInfoPath;
    this.activateKey = activateKey;
    this.heartbeatKey = heartbeatKey;
    this.eventKey = eventKey;
    this.eventsKey = eventsKey;
    this.propertiesKey = propertiesKey;
    this.pageEventKey = pageEventKey;
    this.appsInfoKey = appsInfoKey;
    this.suPaths = suPaths;
    this.usageStatsFieldLaunchCount = usageStatsFieldLaunchCount;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Config(Config other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetAnalyticsUrl()) {
      this.analyticsUrl = other.analyticsUrl;
    }
    if (other.isSetChannel()) {
      this.channel = other.channel;
    }
    this.uploadAppsInfo = other.uploadAppsInfo;
    if (other.isSetActivatePath()) {
      this.activatePath = other.activatePath;
    }
    if (other.isSetHeartbeatPath()) {
      this.heartbeatPath = other.heartbeatPath;
    }
    if (other.isSetEventPath()) {
      this.eventPath = other.eventPath;
    }
    if (other.isSetEventsPath()) {
      this.eventsPath = other.eventsPath;
    }
    if (other.isSetPropertiesPath()) {
      this.propertiesPath = other.propertiesPath;
    }
    if (other.isSetPageEventPath()) {
      this.pageEventPath = other.pageEventPath;
    }
    if (other.isSetAppsInfoPath()) {
      this.appsInfoPath = other.appsInfoPath;
    }
    if (other.isSetActivateKey()) {
      this.activateKey = other.activateKey;
    }
    if (other.isSetHeartbeatKey()) {
      this.heartbeatKey = other.heartbeatKey;
    }
    if (other.isSetEventKey()) {
      this.eventKey = other.eventKey;
    }
    if (other.isSetEventsKey()) {
      this.eventsKey = other.eventsKey;
    }
    if (other.isSetPropertiesKey()) {
      this.propertiesKey = other.propertiesKey;
    }
    if (other.isSetPageEventKey()) {
      this.pageEventKey = other.pageEventKey;
    }
    if (other.isSetAppsInfoKey()) {
      this.appsInfoKey = other.appsInfoKey;
    }
    if (other.isSetSuPaths()) {
      this.suPaths = other.suPaths;
    }
    if (other.isSetUsageStatsFieldLaunchCount()) {
      this.usageStatsFieldLaunchCount = other.usageStatsFieldLaunchCount;
    }
  }

  public Config deepCopy() {
    return new Config(this);
  }

  public void clear() {
    this.analyticsUrl = null;
    this.channel = null;
    setUploadAppsInfoIsSet(false);
    this.uploadAppsInfo = false;
    this.activatePath = ACTIVATE_PATH_FIELD_VALUE.name();

    this.heartbeatPath = HEARTBEAT_PATH_FIELD_VALUE.name();

    this.eventPath = EVENT_PATH_FIELD_VALUE.name();

    this.eventsPath = EVENTS_PATH_FIELD_VALUE.name();

    this.propertiesPath = PROPERTIES_PATH_FIELD_VALUE.name();

    this.pageEventPath = PAGE_EVENT_PATH_FIELD_VALUE.name();

    this.appsInfoPath = APPS_INFO_PATH_FIELD_VALUE.name();

    this.activateKey = ACTIVATE_KEY_FIELD_VALUE.name();

    this.heartbeatKey = HEARTBEAT_KEY_FIELD_VALUE.name();

    this.eventKey = EVENT_KEY_FIELD_VALUE.name();

    this.eventsKey = EVENTS_KEY_FIELD_VALUE.name();

    this.propertiesKey = PROPERTIES_KEY_FIELD_VALUE.name();

    this.pageEventKey = PAGE_EVENT_KEY_FIELD_VALUE.name();

    this.appsInfoKey = APPS_INFO_KEY_FIELD_VALUE.name();

    this.suPaths = SU_PATHS_FIELD_VALUE.name();

    this.usageStatsFieldLaunchCount = USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_VALUE.name();

  }

  public String getAnalyticsUrl() {
    return this.analyticsUrl;
  }

  public void setAnalyticsUrl(String analyticsUrl) {
    this.analyticsUrl = analyticsUrl;
  }

  public void unsetAnalyticsUrl() {
    this.analyticsUrl = null;
  }

  /** Returns true if field analyticsUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetAnalyticsUrl() {
    return this.analyticsUrl != null;
  }

  public void setAnalyticsUrlIsSet(boolean value) {
    if (!value) {
      this.analyticsUrl = null;
    }
  }

  public String getChannel() {
    return this.channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }

  public void unsetChannel() {
    this.channel = null;
  }

  /** Returns true if field channel is set (has been assigned a value) and false otherwise */
  public boolean isSetChannel() {
    return this.channel != null;
  }

  public void setChannelIsSet(boolean value) {
    if (!value) {
      this.channel = null;
    }
  }

  public boolean isUploadAppsInfo() {
    return this.uploadAppsInfo;
  }

  public void setUploadAppsInfo(boolean uploadAppsInfo) {
    this.uploadAppsInfo = uploadAppsInfo;
    setUploadAppsInfoIsSet(true);
  }

  public void unsetUploadAppsInfo() {
    __isset_vector[__UPLOADAPPSINFO_ISSET_ID] = false;
  }

  /** Returns true if field uploadAppsInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetUploadAppsInfo() {
    return __isset_vector[__UPLOADAPPSINFO_ISSET_ID];
  }

  public void setUploadAppsInfoIsSet(boolean value) {
    __isset_vector[__UPLOADAPPSINFO_ISSET_ID] = value;
  }

  public String getActivatePath() {
    return this.activatePath;
  }

  public void setActivatePath(String activatePath) {
    this.activatePath = activatePath;
  }

  public void unsetActivatePath() {
    this.activatePath = null;
  }

  /** Returns true if field activatePath is set (has been assigned a value) and false otherwise */
  public boolean isSetActivatePath() {
    return this.activatePath != null;
  }

  public void setActivatePathIsSet(boolean value) {
    if (!value) {
      this.activatePath = null;
    }
  }

  public String getHeartbeatPath() {
    return this.heartbeatPath;
  }

  public void setHeartbeatPath(String heartbeatPath) {
    this.heartbeatPath = heartbeatPath;
  }

  public void unsetHeartbeatPath() {
    this.heartbeatPath = null;
  }

  /** Returns true if field heartbeatPath is set (has been assigned a value) and false otherwise */
  public boolean isSetHeartbeatPath() {
    return this.heartbeatPath != null;
  }

  public void setHeartbeatPathIsSet(boolean value) {
    if (!value) {
      this.heartbeatPath = null;
    }
  }

  public String getEventPath() {
    return this.eventPath;
  }

  public void setEventPath(String eventPath) {
    this.eventPath = eventPath;
  }

  public void unsetEventPath() {
    this.eventPath = null;
  }

  /** Returns true if field eventPath is set (has been assigned a value) and false otherwise */
  public boolean isSetEventPath() {
    return this.eventPath != null;
  }

  public void setEventPathIsSet(boolean value) {
    if (!value) {
      this.eventPath = null;
    }
  }

  public String getEventsPath() {
    return this.eventsPath;
  }

  public void setEventsPath(String eventsPath) {
    this.eventsPath = eventsPath;
  }

  public void unsetEventsPath() {
    this.eventsPath = null;
  }

  /** Returns true if field eventsPath is set (has been assigned a value) and false otherwise */
  public boolean isSetEventsPath() {
    return this.eventsPath != null;
  }

  public void setEventsPathIsSet(boolean value) {
    if (!value) {
      this.eventsPath = null;
    }
  }

  public String getPropertiesPath() {
    return this.propertiesPath;
  }

  public void setPropertiesPath(String propertiesPath) {
    this.propertiesPath = propertiesPath;
  }

  public void unsetPropertiesPath() {
    this.propertiesPath = null;
  }

  /** Returns true if field propertiesPath is set (has been assigned a value) and false otherwise */
  public boolean isSetPropertiesPath() {
    return this.propertiesPath != null;
  }

  public void setPropertiesPathIsSet(boolean value) {
    if (!value) {
      this.propertiesPath = null;
    }
  }

  public String getPageEventPath() {
    return this.pageEventPath;
  }

  public void setPageEventPath(String pageEventPath) {
    this.pageEventPath = pageEventPath;
  }

  public void unsetPageEventPath() {
    this.pageEventPath = null;
  }

  /** Returns true if field pageEventPath is set (has been assigned a value) and false otherwise */
  public boolean isSetPageEventPath() {
    return this.pageEventPath != null;
  }

  public void setPageEventPathIsSet(boolean value) {
    if (!value) {
      this.pageEventPath = null;
    }
  }

  public String getAppsInfoPath() {
    return this.appsInfoPath;
  }

  public void setAppsInfoPath(String appsInfoPath) {
    this.appsInfoPath = appsInfoPath;
  }

  public void unsetAppsInfoPath() {
    this.appsInfoPath = null;
  }

  /** Returns true if field appsInfoPath is set (has been assigned a value) and false otherwise */
  public boolean isSetAppsInfoPath() {
    return this.appsInfoPath != null;
  }

  public void setAppsInfoPathIsSet(boolean value) {
    if (!value) {
      this.appsInfoPath = null;
    }
  }

  public String getActivateKey() {
    return this.activateKey;
  }

  public void setActivateKey(String activateKey) {
    this.activateKey = activateKey;
  }

  public void unsetActivateKey() {
    this.activateKey = null;
  }

  /** Returns true if field activateKey is set (has been assigned a value) and false otherwise */
  public boolean isSetActivateKey() {
    return this.activateKey != null;
  }

  public void setActivateKeyIsSet(boolean value) {
    if (!value) {
      this.activateKey = null;
    }
  }

  public String getHeartbeatKey() {
    return this.heartbeatKey;
  }

  public void setHeartbeatKey(String heartbeatKey) {
    this.heartbeatKey = heartbeatKey;
  }

  public void unsetHeartbeatKey() {
    this.heartbeatKey = null;
  }

  /** Returns true if field heartbeatKey is set (has been assigned a value) and false otherwise */
  public boolean isSetHeartbeatKey() {
    return this.heartbeatKey != null;
  }

  public void setHeartbeatKeyIsSet(boolean value) {
    if (!value) {
      this.heartbeatKey = null;
    }
  }

  public String getEventKey() {
    return this.eventKey;
  }

  public void setEventKey(String eventKey) {
    this.eventKey = eventKey;
  }

  public void unsetEventKey() {
    this.eventKey = null;
  }

  /** Returns true if field eventKey is set (has been assigned a value) and false otherwise */
  public boolean isSetEventKey() {
    return this.eventKey != null;
  }

  public void setEventKeyIsSet(boolean value) {
    if (!value) {
      this.eventKey = null;
    }
  }

  public String getEventsKey() {
    return this.eventsKey;
  }

  public void setEventsKey(String eventsKey) {
    this.eventsKey = eventsKey;
  }

  public void unsetEventsKey() {
    this.eventsKey = null;
  }

  /** Returns true if field eventsKey is set (has been assigned a value) and false otherwise */
  public boolean isSetEventsKey() {
    return this.eventsKey != null;
  }

  public void setEventsKeyIsSet(boolean value) {
    if (!value) {
      this.eventsKey = null;
    }
  }

  public String getPropertiesKey() {
    return this.propertiesKey;
  }

  public void setPropertiesKey(String propertiesKey) {
    this.propertiesKey = propertiesKey;
  }

  public void unsetPropertiesKey() {
    this.propertiesKey = null;
  }

  /** Returns true if field propertiesKey is set (has been assigned a value) and false otherwise */
  public boolean isSetPropertiesKey() {
    return this.propertiesKey != null;
  }

  public void setPropertiesKeyIsSet(boolean value) {
    if (!value) {
      this.propertiesKey = null;
    }
  }

  public String getPageEventKey() {
    return this.pageEventKey;
  }

  public void setPageEventKey(String pageEventKey) {
    this.pageEventKey = pageEventKey;
  }

  public void unsetPageEventKey() {
    this.pageEventKey = null;
  }

  /** Returns true if field pageEventKey is set (has been assigned a value) and false otherwise */
  public boolean isSetPageEventKey() {
    return this.pageEventKey != null;
  }

  public void setPageEventKeyIsSet(boolean value) {
    if (!value) {
      this.pageEventKey = null;
    }
  }

  public String getAppsInfoKey() {
    return this.appsInfoKey;
  }

  public void setAppsInfoKey(String appsInfoKey) {
    this.appsInfoKey = appsInfoKey;
  }

  public void unsetAppsInfoKey() {
    this.appsInfoKey = null;
  }

  /** Returns true if field appsInfoKey is set (has been assigned a value) and false otherwise */
  public boolean isSetAppsInfoKey() {
    return this.appsInfoKey != null;
  }

  public void setAppsInfoKeyIsSet(boolean value) {
    if (!value) {
      this.appsInfoKey = null;
    }
  }

  public String getSuPaths() {
    return this.suPaths;
  }

  public void setSuPaths(String suPaths) {
    this.suPaths = suPaths;
  }

  public void unsetSuPaths() {
    this.suPaths = null;
  }

  /** Returns true if field suPaths is set (has been assigned a value) and false otherwise */
  public boolean isSetSuPaths() {
    return this.suPaths != null;
  }

  public void setSuPathsIsSet(boolean value) {
    if (!value) {
      this.suPaths = null;
    }
  }

  public String getUsageStatsFieldLaunchCount() {
    return this.usageStatsFieldLaunchCount;
  }

  public void setUsageStatsFieldLaunchCount(String usageStatsFieldLaunchCount) {
    this.usageStatsFieldLaunchCount = usageStatsFieldLaunchCount;
  }

  public void unsetUsageStatsFieldLaunchCount() {
    this.usageStatsFieldLaunchCount = null;
  }

  /** Returns true if field usageStatsFieldLaunchCount is set (has been assigned a value) and false otherwise */
  public boolean isSetUsageStatsFieldLaunchCount() {
    return this.usageStatsFieldLaunchCount != null;
  }

  public void setUsageStatsFieldLaunchCountIsSet(boolean value) {
    if (!value) {
      this.usageStatsFieldLaunchCount = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Config)
      return this.equals((Config)that);
    return false;
  }

  public boolean equals(Config that) {
    if (that == null)
      return false;

    boolean this_present_analyticsUrl = true && this.isSetAnalyticsUrl();
    boolean that_present_analyticsUrl = true && that.isSetAnalyticsUrl();
    if (this_present_analyticsUrl || that_present_analyticsUrl) {
      if (!(this_present_analyticsUrl && that_present_analyticsUrl))
        return false;
      if (!this.analyticsUrl.equals(that.analyticsUrl))
        return false;
    }

    boolean this_present_channel = true && this.isSetChannel();
    boolean that_present_channel = true && that.isSetChannel();
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (!this.channel.equals(that.channel))
        return false;
    }

    boolean this_present_uploadAppsInfo = true;
    boolean that_present_uploadAppsInfo = true;
    if (this_present_uploadAppsInfo || that_present_uploadAppsInfo) {
      if (!(this_present_uploadAppsInfo && that_present_uploadAppsInfo))
        return false;
      if (this.uploadAppsInfo != that.uploadAppsInfo)
        return false;
    }

    boolean this_present_activatePath = true && this.isSetActivatePath();
    boolean that_present_activatePath = true && that.isSetActivatePath();
    if (this_present_activatePath || that_present_activatePath) {
      if (!(this_present_activatePath && that_present_activatePath))
        return false;
      if (!this.activatePath.equals(that.activatePath))
        return false;
    }

    boolean this_present_heartbeatPath = true && this.isSetHeartbeatPath();
    boolean that_present_heartbeatPath = true && that.isSetHeartbeatPath();
    if (this_present_heartbeatPath || that_present_heartbeatPath) {
      if (!(this_present_heartbeatPath && that_present_heartbeatPath))
        return false;
      if (!this.heartbeatPath.equals(that.heartbeatPath))
        return false;
    }

    boolean this_present_eventPath = true && this.isSetEventPath();
    boolean that_present_eventPath = true && that.isSetEventPath();
    if (this_present_eventPath || that_present_eventPath) {
      if (!(this_present_eventPath && that_present_eventPath))
        return false;
      if (!this.eventPath.equals(that.eventPath))
        return false;
    }

    boolean this_present_eventsPath = true && this.isSetEventsPath();
    boolean that_present_eventsPath = true && that.isSetEventsPath();
    if (this_present_eventsPath || that_present_eventsPath) {
      if (!(this_present_eventsPath && that_present_eventsPath))
        return false;
      if (!this.eventsPath.equals(that.eventsPath))
        return false;
    }

    boolean this_present_propertiesPath = true && this.isSetPropertiesPath();
    boolean that_present_propertiesPath = true && that.isSetPropertiesPath();
    if (this_present_propertiesPath || that_present_propertiesPath) {
      if (!(this_present_propertiesPath && that_present_propertiesPath))
        return false;
      if (!this.propertiesPath.equals(that.propertiesPath))
        return false;
    }

    boolean this_present_pageEventPath = true && this.isSetPageEventPath();
    boolean that_present_pageEventPath = true && that.isSetPageEventPath();
    if (this_present_pageEventPath || that_present_pageEventPath) {
      if (!(this_present_pageEventPath && that_present_pageEventPath))
        return false;
      if (!this.pageEventPath.equals(that.pageEventPath))
        return false;
    }

    boolean this_present_appsInfoPath = true && this.isSetAppsInfoPath();
    boolean that_present_appsInfoPath = true && that.isSetAppsInfoPath();
    if (this_present_appsInfoPath || that_present_appsInfoPath) {
      if (!(this_present_appsInfoPath && that_present_appsInfoPath))
        return false;
      if (!this.appsInfoPath.equals(that.appsInfoPath))
        return false;
    }

    boolean this_present_activateKey = true && this.isSetActivateKey();
    boolean that_present_activateKey = true && that.isSetActivateKey();
    if (this_present_activateKey || that_present_activateKey) {
      if (!(this_present_activateKey && that_present_activateKey))
        return false;
      if (!this.activateKey.equals(that.activateKey))
        return false;
    }

    boolean this_present_heartbeatKey = true && this.isSetHeartbeatKey();
    boolean that_present_heartbeatKey = true && that.isSetHeartbeatKey();
    if (this_present_heartbeatKey || that_present_heartbeatKey) {
      if (!(this_present_heartbeatKey && that_present_heartbeatKey))
        return false;
      if (!this.heartbeatKey.equals(that.heartbeatKey))
        return false;
    }

    boolean this_present_eventKey = true && this.isSetEventKey();
    boolean that_present_eventKey = true && that.isSetEventKey();
    if (this_present_eventKey || that_present_eventKey) {
      if (!(this_present_eventKey && that_present_eventKey))
        return false;
      if (!this.eventKey.equals(that.eventKey))
        return false;
    }

    boolean this_present_eventsKey = true && this.isSetEventsKey();
    boolean that_present_eventsKey = true && that.isSetEventsKey();
    if (this_present_eventsKey || that_present_eventsKey) {
      if (!(this_present_eventsKey && that_present_eventsKey))
        return false;
      if (!this.eventsKey.equals(that.eventsKey))
        return false;
    }

    boolean this_present_propertiesKey = true && this.isSetPropertiesKey();
    boolean that_present_propertiesKey = true && that.isSetPropertiesKey();
    if (this_present_propertiesKey || that_present_propertiesKey) {
      if (!(this_present_propertiesKey && that_present_propertiesKey))
        return false;
      if (!this.propertiesKey.equals(that.propertiesKey))
        return false;
    }

    boolean this_present_pageEventKey = true && this.isSetPageEventKey();
    boolean that_present_pageEventKey = true && that.isSetPageEventKey();
    if (this_present_pageEventKey || that_present_pageEventKey) {
      if (!(this_present_pageEventKey && that_present_pageEventKey))
        return false;
      if (!this.pageEventKey.equals(that.pageEventKey))
        return false;
    }

    boolean this_present_appsInfoKey = true && this.isSetAppsInfoKey();
    boolean that_present_appsInfoKey = true && that.isSetAppsInfoKey();
    if (this_present_appsInfoKey || that_present_appsInfoKey) {
      if (!(this_present_appsInfoKey && that_present_appsInfoKey))
        return false;
      if (!this.appsInfoKey.equals(that.appsInfoKey))
        return false;
    }

    boolean this_present_suPaths = true && this.isSetSuPaths();
    boolean that_present_suPaths = true && that.isSetSuPaths();
    if (this_present_suPaths || that_present_suPaths) {
      if (!(this_present_suPaths && that_present_suPaths))
        return false;
      if (!this.suPaths.equals(that.suPaths))
        return false;
    }

    boolean this_present_usageStatsFieldLaunchCount = true && this.isSetUsageStatsFieldLaunchCount();
    boolean that_present_usageStatsFieldLaunchCount = true && that.isSetUsageStatsFieldLaunchCount();
    if (this_present_usageStatsFieldLaunchCount || that_present_usageStatsFieldLaunchCount) {
      if (!(this_present_usageStatsFieldLaunchCount && that_present_usageStatsFieldLaunchCount))
        return false;
      if (!this.usageStatsFieldLaunchCount.equals(that.usageStatsFieldLaunchCount))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    Config other = (Config)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetAnalyticsUrl(), other.isSetAnalyticsUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnalyticsUrl()) {
      lastComparison = TBaseHelper.compareTo(this.analyticsUrl, other.analyticsUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetChannel(), other.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = TBaseHelper.compareTo(this.channel, other.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetUploadAppsInfo(), other.isSetUploadAppsInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUploadAppsInfo()) {
      lastComparison = TBaseHelper.compareTo(this.uploadAppsInfo, other.uploadAppsInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetActivatePath(), other.isSetActivatePath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivatePath()) {
      lastComparison = TBaseHelper.compareTo(this.activatePath, other.activatePath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetHeartbeatPath(), other.isSetHeartbeatPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeartbeatPath()) {
      lastComparison = TBaseHelper.compareTo(this.heartbeatPath, other.heartbeatPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEventPath(), other.isSetEventPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventPath()) {
      lastComparison = TBaseHelper.compareTo(this.eventPath, other.eventPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEventsPath(), other.isSetEventsPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventsPath()) {
      lastComparison = TBaseHelper.compareTo(this.eventsPath, other.eventsPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPropertiesPath(), other.isSetPropertiesPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPropertiesPath()) {
      lastComparison = TBaseHelper.compareTo(this.propertiesPath, other.propertiesPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPageEventPath(), other.isSetPageEventPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageEventPath()) {
      lastComparison = TBaseHelper.compareTo(this.pageEventPath, other.pageEventPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAppsInfoPath(), other.isSetAppsInfoPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppsInfoPath()) {
      lastComparison = TBaseHelper.compareTo(this.appsInfoPath, other.appsInfoPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetActivateKey(), other.isSetActivateKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivateKey()) {
      lastComparison = TBaseHelper.compareTo(this.activateKey, other.activateKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetHeartbeatKey(), other.isSetHeartbeatKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeartbeatKey()) {
      lastComparison = TBaseHelper.compareTo(this.heartbeatKey, other.heartbeatKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEventKey(), other.isSetEventKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventKey()) {
      lastComparison = TBaseHelper.compareTo(this.eventKey, other.eventKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEventsKey(), other.isSetEventsKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventsKey()) {
      lastComparison = TBaseHelper.compareTo(this.eventsKey, other.eventsKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPropertiesKey(), other.isSetPropertiesKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPropertiesKey()) {
      lastComparison = TBaseHelper.compareTo(this.propertiesKey, other.propertiesKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPageEventKey(), other.isSetPageEventKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageEventKey()) {
      lastComparison = TBaseHelper.compareTo(this.pageEventKey, other.pageEventKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAppsInfoKey(), other.isSetAppsInfoKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppsInfoKey()) {
      lastComparison = TBaseHelper.compareTo(this.appsInfoKey, other.appsInfoKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSuPaths(), other.isSetSuPaths());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuPaths()) {
      lastComparison = TBaseHelper.compareTo(this.suPaths, other.suPaths);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetUsageStatsFieldLaunchCount(), other.isSetUsageStatsFieldLaunchCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsageStatsFieldLaunchCount()) {
      lastComparison = TBaseHelper.compareTo(this.usageStatsFieldLaunchCount, other.usageStatsFieldLaunchCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // ANALYTICS_URL
          if (field.type == TType.STRING) {
            this.analyticsUrl = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // CHANNEL
          if (field.type == TType.STRING) {
            this.channel = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 30: // UPLOAD_APPS_INFO
          if (field.type == TType.BOOL) {
            this.uploadAppsInfo = iprot.readBool();
            setUploadAppsInfoIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 40: // ACTIVATE_PATH
          if (field.type == TType.STRING) {
            this.activatePath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 41: // HEARTBEAT_PATH
          if (field.type == TType.STRING) {
            this.heartbeatPath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 42: // EVENT_PATH
          if (field.type == TType.STRING) {
            this.eventPath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 43: // EVENTS_PATH
          if (field.type == TType.STRING) {
            this.eventsPath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 44: // PROPERTIES_PATH
          if (field.type == TType.STRING) {
            this.propertiesPath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 45: // PAGE_EVENT_PATH
          if (field.type == TType.STRING) {
            this.pageEventPath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 46: // APPS_INFO_PATH
          if (field.type == TType.STRING) {
            this.appsInfoPath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 60: // ACTIVATE_KEY
          if (field.type == TType.STRING) {
            this.activateKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 61: // HEARTBEAT_KEY
          if (field.type == TType.STRING) {
            this.heartbeatKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 62: // EVENT_KEY
          if (field.type == TType.STRING) {
            this.eventKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 63: // EVENTS_KEY
          if (field.type == TType.STRING) {
            this.eventsKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 64: // PROPERTIES_KEY
          if (field.type == TType.STRING) {
            this.propertiesKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 65: // PAGE_EVENT_KEY
          if (field.type == TType.STRING) {
            this.pageEventKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 66: // APPS_INFO_KEY
          if (field.type == TType.STRING) {
            this.appsInfoKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 90: // SU_PATHS
          if (field.type == TType.STRING) {
            this.suPaths = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 91: // USAGE_STATS_FIELD_LAUNCH_COUNT
          if (field.type == TType.STRING) {
            this.usageStatsFieldLaunchCount = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.analyticsUrl != null) {
      oprot.writeFieldBegin(ANALYTICS_URL_FIELD_DESC);
      oprot.writeString(this.analyticsUrl);
      oprot.writeFieldEnd();
    }
    if (this.channel != null) {
      oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
      oprot.writeString(this.channel);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(UPLOAD_APPS_INFO_FIELD_DESC);
    oprot.writeBool(this.uploadAppsInfo);
    oprot.writeFieldEnd();
    if (this.activatePath != null) {
      oprot.writeFieldBegin(ACTIVATE_PATH_FIELD_DESC);
      oprot.writeString(this.activatePath);
      oprot.writeFieldEnd();
    }
    if (this.heartbeatPath != null) {
      oprot.writeFieldBegin(HEARTBEAT_PATH_FIELD_DESC);
      oprot.writeString(this.heartbeatPath);
      oprot.writeFieldEnd();
    }
    if (this.eventPath != null) {
      oprot.writeFieldBegin(EVENT_PATH_FIELD_DESC);
      oprot.writeString(this.eventPath);
      oprot.writeFieldEnd();
    }
    if (this.eventsPath != null) {
      oprot.writeFieldBegin(EVENTS_PATH_FIELD_DESC);
      oprot.writeString(this.eventsPath);
      oprot.writeFieldEnd();
    }
    if (this.propertiesPath != null) {
      oprot.writeFieldBegin(PROPERTIES_PATH_FIELD_DESC);
      oprot.writeString(this.propertiesPath);
      oprot.writeFieldEnd();
    }
    if (this.pageEventPath != null) {
      oprot.writeFieldBegin(PAGE_EVENT_PATH_FIELD_DESC);
      oprot.writeString(this.pageEventPath);
      oprot.writeFieldEnd();
    }
    if (this.appsInfoPath != null) {
      oprot.writeFieldBegin(APPS_INFO_PATH_FIELD_DESC);
      oprot.writeString(this.appsInfoPath);
      oprot.writeFieldEnd();
    }
    if (this.activateKey != null) {
      oprot.writeFieldBegin(ACTIVATE_KEY_FIELD_DESC);
      oprot.writeString(this.activateKey);
      oprot.writeFieldEnd();
    }
    if (this.heartbeatKey != null) {
      oprot.writeFieldBegin(HEARTBEAT_KEY_FIELD_DESC);
      oprot.writeString(this.heartbeatKey);
      oprot.writeFieldEnd();
    }
    if (this.eventKey != null) {
      oprot.writeFieldBegin(EVENT_KEY_FIELD_DESC);
      oprot.writeString(this.eventKey);
      oprot.writeFieldEnd();
    }
    if (this.eventsKey != null) {
      oprot.writeFieldBegin(EVENTS_KEY_FIELD_DESC);
      oprot.writeString(this.eventsKey);
      oprot.writeFieldEnd();
    }
    if (this.propertiesKey != null) {
      oprot.writeFieldBegin(PROPERTIES_KEY_FIELD_DESC);
      oprot.writeString(this.propertiesKey);
      oprot.writeFieldEnd();
    }
    if (this.pageEventKey != null) {
      oprot.writeFieldBegin(PAGE_EVENT_KEY_FIELD_DESC);
      oprot.writeString(this.pageEventKey);
      oprot.writeFieldEnd();
    }
    if (this.appsInfoKey != null) {
      oprot.writeFieldBegin(APPS_INFO_KEY_FIELD_DESC);
      oprot.writeString(this.appsInfoKey);
      oprot.writeFieldEnd();
    }
    if (this.suPaths != null) {
      oprot.writeFieldBegin(SU_PATHS_FIELD_DESC);
      oprot.writeString(this.suPaths);
      oprot.writeFieldEnd();
    }
    if (this.usageStatsFieldLaunchCount != null) {
      oprot.writeFieldBegin(USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_DESC);
      oprot.writeString(this.usageStatsFieldLaunchCount);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public void validate() throws TException {
    // check for required fields
  }

  public void read(JSONObject obj) throws TException {
    validate();

    try {
      if (obj.has(ANALYTICS_URL_FIELD_DESC.name())) {
        this.analyticsUrl = obj.optString(ANALYTICS_URL_FIELD_DESC.name());
      }
      if (obj.has(CHANNEL_FIELD_DESC.name())) {
        this.channel = obj.optString(CHANNEL_FIELD_DESC.name());
      }
      if (obj.has(UPLOAD_APPS_INFO_FIELD_DESC.name())) {
        this.uploadAppsInfo = obj.optBoolean(UPLOAD_APPS_INFO_FIELD_DESC.name());
        setUploadAppsInfoIsSet(true);
      }
      if (obj.has(ACTIVATE_PATH_FIELD_DESC.name())) {
        this.activatePath = obj.optString(ACTIVATE_PATH_FIELD_DESC.name());
      }
      if (obj.has(HEARTBEAT_PATH_FIELD_DESC.name())) {
        this.heartbeatPath = obj.optString(HEARTBEAT_PATH_FIELD_DESC.name());
      }
      if (obj.has(EVENT_PATH_FIELD_DESC.name())) {
        this.eventPath = obj.optString(EVENT_PATH_FIELD_DESC.name());
      }
      if (obj.has(EVENTS_PATH_FIELD_DESC.name())) {
        this.eventsPath = obj.optString(EVENTS_PATH_FIELD_DESC.name());
      }
      if (obj.has(PROPERTIES_PATH_FIELD_DESC.name())) {
        this.propertiesPath = obj.optString(PROPERTIES_PATH_FIELD_DESC.name());
      }
      if (obj.has(PAGE_EVENT_PATH_FIELD_DESC.name())) {
        this.pageEventPath = obj.optString(PAGE_EVENT_PATH_FIELD_DESC.name());
      }
      if (obj.has(APPS_INFO_PATH_FIELD_DESC.name())) {
        this.appsInfoPath = obj.optString(APPS_INFO_PATH_FIELD_DESC.name());
      }
      if (obj.has(ACTIVATE_KEY_FIELD_DESC.name())) {
        this.activateKey = obj.optString(ACTIVATE_KEY_FIELD_DESC.name());
      }
      if (obj.has(HEARTBEAT_KEY_FIELD_DESC.name())) {
        this.heartbeatKey = obj.optString(HEARTBEAT_KEY_FIELD_DESC.name());
      }
      if (obj.has(EVENT_KEY_FIELD_DESC.name())) {
        this.eventKey = obj.optString(EVENT_KEY_FIELD_DESC.name());
      }
      if (obj.has(EVENTS_KEY_FIELD_DESC.name())) {
        this.eventsKey = obj.optString(EVENTS_KEY_FIELD_DESC.name());
      }
      if (obj.has(PROPERTIES_KEY_FIELD_DESC.name())) {
        this.propertiesKey = obj.optString(PROPERTIES_KEY_FIELD_DESC.name());
      }
      if (obj.has(PAGE_EVENT_KEY_FIELD_DESC.name())) {
        this.pageEventKey = obj.optString(PAGE_EVENT_KEY_FIELD_DESC.name());
      }
      if (obj.has(APPS_INFO_KEY_FIELD_DESC.name())) {
        this.appsInfoKey = obj.optString(APPS_INFO_KEY_FIELD_DESC.name());
      }
      if (obj.has(SU_PATHS_FIELD_DESC.name())) {
        this.suPaths = obj.optString(SU_PATHS_FIELD_DESC.name());
      }
      if (obj.has(USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_DESC.name())) {
        this.usageStatsFieldLaunchCount = obj.optString(USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_DESC.name());
      }
    } catch (Exception e) {
        throw new TException(e);
    }
  }

  public void write(JSONObject obj) throws TException {
    validate();

    try {
      if (this.analyticsUrl != null) {
        Object v_analyticsUrl = this.analyticsUrl;
        obj.put(ANALYTICS_URL_FIELD_DESC.name(), v_analyticsUrl);
      }
      if (this.channel != null) {
        Object v_channel = this.channel;
        obj.put(CHANNEL_FIELD_DESC.name(), v_channel);
      }
      Object v_uploadAppsInfo = this.uploadAppsInfo;
      obj.put(UPLOAD_APPS_INFO_FIELD_DESC.name(), v_uploadAppsInfo);
      if (this.activatePath != null) {
        Object v_activatePath = this.activatePath;
        obj.put(ACTIVATE_PATH_FIELD_DESC.name(), v_activatePath);
      }
      if (this.heartbeatPath != null) {
        Object v_heartbeatPath = this.heartbeatPath;
        obj.put(HEARTBEAT_PATH_FIELD_DESC.name(), v_heartbeatPath);
      }
      if (this.eventPath != null) {
        Object v_eventPath = this.eventPath;
        obj.put(EVENT_PATH_FIELD_DESC.name(), v_eventPath);
      }
      if (this.eventsPath != null) {
        Object v_eventsPath = this.eventsPath;
        obj.put(EVENTS_PATH_FIELD_DESC.name(), v_eventsPath);
      }
      if (this.propertiesPath != null) {
        Object v_propertiesPath = this.propertiesPath;
        obj.put(PROPERTIES_PATH_FIELD_DESC.name(), v_propertiesPath);
      }
      if (this.pageEventPath != null) {
        Object v_pageEventPath = this.pageEventPath;
        obj.put(PAGE_EVENT_PATH_FIELD_DESC.name(), v_pageEventPath);
      }
      if (this.appsInfoPath != null) {
        Object v_appsInfoPath = this.appsInfoPath;
        obj.put(APPS_INFO_PATH_FIELD_DESC.name(), v_appsInfoPath);
      }
      if (this.activateKey != null) {
        Object v_activateKey = this.activateKey;
        obj.put(ACTIVATE_KEY_FIELD_DESC.name(), v_activateKey);
      }
      if (this.heartbeatKey != null) {
        Object v_heartbeatKey = this.heartbeatKey;
        obj.put(HEARTBEAT_KEY_FIELD_DESC.name(), v_heartbeatKey);
      }
      if (this.eventKey != null) {
        Object v_eventKey = this.eventKey;
        obj.put(EVENT_KEY_FIELD_DESC.name(), v_eventKey);
      }
      if (this.eventsKey != null) {
        Object v_eventsKey = this.eventsKey;
        obj.put(EVENTS_KEY_FIELD_DESC.name(), v_eventsKey);
      }
      if (this.propertiesKey != null) {
        Object v_propertiesKey = this.propertiesKey;
        obj.put(PROPERTIES_KEY_FIELD_DESC.name(), v_propertiesKey);
      }
      if (this.pageEventKey != null) {
        Object v_pageEventKey = this.pageEventKey;
        obj.put(PAGE_EVENT_KEY_FIELD_DESC.name(), v_pageEventKey);
      }
      if (this.appsInfoKey != null) {
        Object v_appsInfoKey = this.appsInfoKey;
        obj.put(APPS_INFO_KEY_FIELD_DESC.name(), v_appsInfoKey);
      }
      if (this.suPaths != null) {
        Object v_suPaths = this.suPaths;
        obj.put(SU_PATHS_FIELD_DESC.name(), v_suPaths);
      }
      if (this.usageStatsFieldLaunchCount != null) {
        Object v_usageStatsFieldLaunchCount = this.usageStatsFieldLaunchCount;
        obj.put(USAGE_STATS_FIELD_LAUNCH_COUNT_FIELD_DESC.name(), v_usageStatsFieldLaunchCount);
      }
    } catch (Exception e) {
        throw new TException(e);
    }
  }

}

